# priority 6
# clearsnippets

# snippet title "Titlelize in the Transformation"
# ${1:a text}
# ${1/\w+\s*/\u$0/g}
# endsnippet
#
# snippet printf
# printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
# endsnippet
#
# context "1"
# snippet test
# ${1:test}${1/^\w(\w+)/$1/g}
# endsnippet

# clearsnippets title

# snippet printf
# printf(" ${1:%s} \n" ${1/ ([^%]|%%)*(%.)?.8 / (?2:, :\);) })
# endsnippet

# To addition to the scope variables defined above 'snip.visual_content' will be
# also declared and will contain text that was selected before snippet expansion

# pre_expand "snip.buffer[snip.line] = snip.visual_content; snip.cursor.set(snip.line, len(snip.visual_content))"
# snippet test
# $1
# endsnippet

snippet a
<a href="$1"${2: class="${3:link}"}>
	$0
</a>
endsnippet

pre_expand "snip.buffer[snip.line] = ''; snip.cursor.set(snip.line, len(snip.visual_content))"
snippet "nothing done here"
${VISUAL}
endsnippet

pre_expand "snip.buffer[snip.line] = ' '*4; snip.cursor.set(snip.line, 4)"
snippet d
def $1():
    $0
endsnippet

post_jump "if snip.tabstop == 0: insert_toc_item(snip.tabstops[1], snip.buffer)"
snippet s "section" b
`!p insert_delimiter_0(snip, t)`$1`!p insert_section_title(snip, t)`
`!p insert_delimiter_1(snip, t)`
$0
endsnippet
