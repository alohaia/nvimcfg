global !p

math_zones = ["texMathZone" + x for x in ["LI", "LD", "TI", "TD", "Env", "EnvStarred", "Ensured"]]
math_zone_ids = []

def math():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    for syn_id in synstackids:
        if syn_id in math_zone_ids:
            return True
        elif vim.eval("synIDattr(" + syn_id + ", 'name')") in math_zones:
            math_zone_ids.append(syn_id)
            return True
    return False

endglobal

snippet beg "begin{} & end{}" bA
\begin{$1}
    ${2:${VISUAL}}
\end{$1}$0
endsnippet

snippet fig "figure envirenment" bwA
\begin{figure}[ht]
    \centering
    \includegraphics[${1:width=\textwidth}]{${2:filename}}
    \caption{${3:caption}}
    \label{fig:${4:label}}
\end{figure}$0
endsnippet

snippet fullfig "figure envirenment" bwA
\begin{figure}[ht]
    \centering
    \makebox[\textwidth]{\includegraphics[${1:width=\textwidth}]{${2:filename}}}
    \caption{${3:caption}}
    \label{fig:${4:label}}
\end{figure}$0
endsnippet

snippet tbl "table" bwA
\begin{table}
    \centering
    \begin{tabular}{${1:style}}
    \hline
    $2
    \hline
    $3
    \hline
    \end{tabular}
    \caption{${4:caption}}
\end{table}$0
endsnippet

# Snippets for math
snippet mk "Math" wA
$${1}$$0
endsnippet

snippet eq "equation" bwA
\begin{equation}\label{eq:${1:label}}
    ${2:${VISUAL}}
\end{equation}$0
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
.\]$0
endsnippet

context "math()"
snippet "(\(.*?\)|[0-9]*[A-Za-z]+|[0-9]+[A-Za-z]*)/" "Fraction" irAe
\\frac{${1:`!p snip.rv = ('' if not match.group(1) else match.group(1))`}}{$2}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrAe
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet "([0-9]*[A-Za-z]+|[0-9]+[A-Za-z]*)deg" "degree" wrAe
`!p snip.rv = match.group(1)`^\circ
endsnippet

context "math()"
priority 10
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])?hat" "hat" riA
\hat{${1:`!p
if match.group(1)==None:
    snip.rv=''
else:
    snip.rv=match.group(1)`}}
endsnippet

context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet
