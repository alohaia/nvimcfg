# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# global !p
# def remove_sharp(str):
#     i = 0
#     while str[i] == '#':
#         i += 1
#     return str[i+1:]
# endglobal

snippet "(# )?H1" "First heading" rbA
# ${1:`!v expand('%:t:r')`}$0
endsnippet

snippet "(\# )?h([1-6])" "Headings" rbA
`!p snip.rv = '#' * int(match.group(2)) ` ${1:${VISUAL:Heading}}$0
endsnippet
# `${1:`!p remove_sharp(snip.visual_text())`}$0

snippet icd "inline code" iwA
\`${1:Inline code}\`$0
endsnippet

snippet "mcd" "Code block" bA
\`\`\`$1
${2:${VISUAL:Code block}}
\`\`\`$0
endsnippet

snippet  "Blod text" iA
**${1:${VISUAL:Blod text}}**$0
endsnippet

snippet it "italic text" iw
*${1:${VISUAL:Italic text}}*$0
endsnippet

snippet ib "italic blod text" iw
***${1:${VISUAL:italic blod text}}***$0
endsnippet

snippet dell "delete line" iwA
~~${1:${VISUAL:delete line}}~~
endsnippet

snippet sub "subscript" iw
<sub>${1:${VISUAL:subscript}}</sub>$0
endsnippet

snippet sup "subscript" iw
<sup>${1:${VISUAL:superscript}}</sup>$0
endsnippet

snippet ddate "insert date" iw
`date +%F-%A`
endsnippet

snippet sdate "insert date" iw
`date +%d-%A-%H%M`
endsnippet
