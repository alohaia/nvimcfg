# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# global !p
# def remove_sharp(str):
#     i = 0
#     while str[i] == '#':
#         i += 1
#     return str[i+1:]
# endglobal

snippet "(# )?H1" "First heading" rbA
# `!v expand('%:t:r')`
endsnippet

snippet "(\# )?h([1-6])" "Headings" rbA
`!p
snip.rv = '#' * int(match.group(2))
` ${1:${VISUAL:Heading}}
endsnippet
# `${1:`!p remove_sharp(snip.visual_text())`}$0

snippet cd "inline code" i
\`${1:inline code}\`$0
endsnippet

snippet "\`\`" "Code block" b
\`\`\`$1
${2:${VISUAL:code}}
\`\`\`$0
endsnippet

snippet "\`\`c" "Code block" bA
\`\`\`$1
${2:${VISUAL:code}}
\`\`\`$0
endsnippet

snippet  "Blod text" iA
**${1:${VISUAL:text}}**$0
endsnippet

snippet it "italic text" i
*${1:${VISUAL}}*$0
endsnippet
